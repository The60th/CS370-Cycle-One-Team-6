	int initI = i;
        int dir = 0;
        int x0 = x;
        int y0 = y;
        boolean isUnSet = true;
        boolean goodToAdd = true;
        Vector2[] piecePoints = new Vector2[4];
        if(i%30+1 > 29 || buttonField[i + 1].getBackground() != Color.green){
            if(i%30-1 < 0 || buttonField[i - 1].getBackground() != Color.green){
                if((i+30)/30 > 19 || buttonField[i + 30].getBackground() != Color.green){
                    if(i-30 < 0 || buttonField[i -30].getBackground() != Color.green){
                        dir = -1;
                        isUnSet = false;
                        piecePoints = getVectors(x, y, getPieceNum(i), dir);
                    }
                }
            }
        }
        if(i+1 < 600 && i%30 != 29){
            if(buttonField[i + 1].getBackground() == Color.green && isUnSet) {
                i++;
                while (buttonField[i].getBackground() == Color.green) {
                    if(i%30 == 29){
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 1;
                        isUnSet = false;
                        break;
                    } else if(buttonField[i + 1].getIcon() == null && buttonField[i+1].getBackground() == Color.white){
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 1;
                        isUnSet = false;
                        break;
                    } else if (buttonField[i + 1].getIcon() != null && buttonField[i + 1].getIcon() != pieceIcons[20]) {
                        i++;
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        isUnSet = false;
                        break;
                    }
                    i++;
                }
            }
        }
        if(i > 0 && i%30 != 0){
            if ((buttonField[i - 1].getBackground() == Color.green) && isUnSet){
                i--;
                while(buttonField[i].getBackground() == Color.green){
                    if(i%30 == 0) {
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 3;
                        isUnSet = false;
                        break;
                    } else if(buttonField[i-1].getIcon() == null && buttonField[i-1].getBackground() == Color.white){
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 3;
                        isUnSet = false;
                        break;
                    } else if(buttonField[i-1].getIcon() != null && buttonField[i - 1].getIcon() != pieceIcons[20]){
                        i--;
                        x = -600+40*(i%30);
                        y = 400-40*(i/30);
                        isUnSet = false;
                        break;
                    }
                    i--;
                }
            }
        }
        if(i+30 <= 569){
            if ((buttonField[i + 30].getBackground() == Color.green) && isUnSet) {
                i += 30;
                while (buttonField[i].getBackground() == Color.green) {
                    if (i/30 == 19) {
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 2;
                        isUnSet = false;
                        break;
                    }else if(buttonField[i+30].getIcon() == null && buttonField[i+30].getBackground() == Color.white){
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 2;
                        isUnSet = false;
                        break;
                    } else if (buttonField[i + 30].getIcon() != null && buttonField[i + 30].getIcon() != pieceIcons[20]) {
                        i += 30;
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        isUnSet = false;
                        break;
                    }
                    i += 30;
                }
            }
        }
        if(i-30 >= 0) {
            if ((buttonField[i - 30].getBackground() == Color.green) && isUnSet) {
                i -= 30;
                while (buttonField[i].getBackground() == Color.green) {
                    if (i/30 == 0) {
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 4;
                        break;
                    }else if((buttonField[i-30].getIcon() == null) && (buttonField[i-30].getBackground() == Color.WHITE)){
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        dir = 4;
                        break;
                    }else if (buttonField[i - 30].getIcon() != null && buttonField[i -30].getIcon() != pieceIcons[20]) {
                        i -= 30;
                        x = -600 + 40 * (i % 30);
                        y = 400 - 40 * (i / 30);
                        break;
                    }
                    i -= 30;
                }
            }
        }

        Vector2[] piece1Points = getVectors(x, y, getPieceNum(i), dir);
        if(dir > 2)
            dir = dir-2;
        else if(dir != 0 && dir != -1)
            dir = dir+2;
        Vector2[] piece0Points = getVectors(x0, y0, getPieceNum(initI), dir);

        Vector2[] newBodyPoints = new Vector2[4];
        newBodyPoints[0] = piece0Points[0];
        newBodyPoints[1] = piece0Points[1];
        newBodyPoints[2] = piece1Points[0];
        newBodyPoints[3] = piece1Points[1];

        if(dir == -1)
            newBodyPoints = piecePoints;

        if(newBodyPoints[0] == null || newBodyPoints[1] == null || newBodyPoints[2] == null ||newBodyPoints[3] == null){
            return;
        }

        if(BodyPoints.get(0).i0 == -1){
            System.out.println(" added body with points: " + newBodyPoints[0] + " , " + newBodyPoints[1] + " , " + newBodyPoints[2] + " , " + newBodyPoints[3]);
            BodyPoints.remove(0);
            BodyPoints.add(new BodyPoints(initI, i, newBodyPoints));
            System.out.println("Body number " + BodyPoints.size() + " i0 = " + BodyPoints.get(BodyPoints.size()-1).i0 + " i1 = " + BodyPoints.get(BodyPoints.size()-1).i1);
            return;
        }

        for(int n = 0; n < BodyPoints.size(); n++){
            if(initI == BodyPoints.get(n).i0 || initI == BodyPoints.get(n).i1 || i == BodyPoints.get(n).i0 || i == BodyPoints.get(n).i1){
                goodToAdd = false;
                break;
            }
            if(dir == -1){
                System.out.println(" added body with points: " + newBodyPoints[0] + " , " + newBodyPoints[1] + " , " + newBodyPoints[2] + " , " + newBodyPoints[3]);
                BodyPoints.add(new BodyPoints(initI, i, newBodyPoints));
                System.out.println("Body number " + BodyPoints.size() + " i0 = " + BodyPoints.get(BodyPoints.size()-1).i0 + " i1 = " + BodyPoints.get(BodyPoints.size()-1).i1);
                break;
            }
        }
        if(goodToAdd){
            System.out.println(" added body with points: " + newBodyPoints[0] + " , " + newBodyPoints[1] + " , " + newBodyPoints[2] + " , " + newBodyPoints[3]);
            BodyPoints.add(new BodyPoints(initI, i, newBodyPoints));
            System.out.println("Body number " + BodyPoints.size() + " i0 = " + BodyPoints.get(BodyPoints.size()-1).i0 + " i1 = " + BodyPoints.get(BodyPoints.size()-1).i1);
        }